<?php

namespace App\Http\Controllers;

use App\Models\Order;
use App\Models\Cart;
use Illuminate\Http\Request;
use Illuminate\Support\Str;

class CheckoutController extends Controller
{
    public function index()
{
    $cart = Cart::where('user_id', auth()->id())->with('items.product')->firstOrFail();
    $cartItems = $cart->items;
    $products = $cartItems->pluck('product');
    $addresses = auth()->user()->addresses;
    
    return view('checkout.index', compact('cart', 'cartItems', 'products', 'addresses'));
}


    public function store(Request $request)
    {
        $validated = $request->validate([
            'shipping_address_id' => 'required|exists:shipping_addresses,id',
            'payment_method' => 'required|in:credit_card,bank_transfer'
        ]);

        $cart = Cart::where('user_id', auth()->id())->with('items.product')->firstOrFail();
        $address = auth()->user()->addresses()->findOrFail($validated['shipping_address_id']);

        $order = Order::create([
            'user_id' => auth()->id(),
            'order_number' => 'ORD-' . strtoupper(Str::random(8)),
            'subtotal' => $cart->items->sum(fn($item) => $item->price * $item->quantity),
            'tax' => $cart->items->sum(fn($item) => $item->price * $item->quantity) * 0.1,
            'total' => $cart->items->sum(fn($item) => $item->price * $item->quantity) * 1.1,
            'status' => 'pending',
            'shipping_address' => $address->toArray(),
            'billing_address' => $address->toArray(),
            'payment_method' => $validated['payment_method'],
            'payment_status' => 'pending'
        ]);

        foreach($cart->items as $item) {
            $order->items()->create([
                'product_id' => $item->product_id,
                'product_name' => $item->product->name,
                'quantity' => $item->quantity,
                'unit_price' => $item->price,
                'subtotal' => $item->price * $item->quantity
            ]);
        }

        $cart->delete();

        return redirect()->route('orders.show', $order)
            ->with('success', 'Order placed successfully!');
    }
}
